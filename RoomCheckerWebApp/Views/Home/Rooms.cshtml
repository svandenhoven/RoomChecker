@model IEnumerable<MicrosoftGraphAspNetCoreConnectSample.Models.Room>

@{
    ViewData["Title"] = "Rooms at " + DateTime.Now.ToShortTimeString();
}

<style>
    div.gallery {
        margin: 5px;
        border: 1px solid #ccc;
        float: left;
        width: 120px;
        border-radius: 15px;
    }

    div.gallery:hover {
        border: 1px solid #777;
    }

    div.gallery img {
        width: 100%;
        height: auto;
    }

    div.desc {
        padding: 15px;
        text-align: center;
    }

    div.roomName {
        text-align: center;
        font-size: 30px;
    }

    div.status {
        text-align: center;
        font-weight: 700;
    }

    fieldset.scheduler-border {
        border: 1px groove #ddd !important;
        padding: 0 1.4em 1.4em 1.4em !important;
        margin: 0 0 1.5em 0 !important;
        -webkit-box-shadow: 0px 0px 0px 0px #000;
        box-shadow: 0px 0px 0px 0px #000;
        border-radius: 15px;
    }

    legend.scheduler-border {
        font-size: 2.2em !important;
        font-weight: bold !important;
        text-align: left !important;
        width: auto;
        padding: 0 10px;
        border-bottom: none;
    }
</style>

@if (!User.Identity.IsAuthenticated)
{
    <p>@(ViewBag.Message)</p>
    <button type="button" class="btn btn-primary" onclick="javascript:window.location='/Account/SignIn'">Sign In</button>
}
else
{
    <H1><div id="timeTitle"></div></H1>
    <button type="button" class="btn btn-primary" onclick="javascript: SetStatus()">Refresh All</button>
}

<p></p>

@foreach (var floor in Model.GroupBy(r => r.Floor))
{
    <p></p>
    <fieldset class="scheduler-border">
        <legend class="scheduler-border">Floor @(floor.Key)</legend>
            @foreach (var item in Model.Where(r => r.Floor == floor.Key))
            {
        <div class="gallery" id="item_@(item.Name)" onclick="javascript:GetRoomStatus(@(item.Name))">
            <div id="occupied_@(item.Name)" class="label label-default" style="visibility:hidden">&nbsp;</div>
            <div class="roomName">@Html.DisplayFor(modelItem => item.Name)</div>
            <div class="badge">@Html.DisplayFor(modelItem => item.Features)</div>
            <div class="desc">
                <div class="status" id="status_@(item.Name)">Checking...</div>
                <div class="planning" id="planning_@(item.Name)">&nbsp;</div>
            </div>
            <span id="label_@(item.Name)" class="label label-default">@(item.Type)</span>
        </div>
            }
     </fieldset>
}

        <script src="https://code.jquery.com/jquery-3.3.1.min.js"
                integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
                crossorigin="anonymous"></script>

        <script>
        var rooms = [];

    @foreach (var d in Model)
    {
            @:rooms.push("@d.Name");
        }

        $(document).ready(SetStatus);

        function SetStatus() {
            rooms.forEach(function (room) {
                $('#timeTitle').text('Rooms available at ' + n(new Date().getHours()) + ":" + n(new Date().getMinutes()));
                GetRoomStatus(room);
            });

            }

        function n(n) {
            return n > 9 ? "" + n : "0" + n;
        }

        function GetRoomStatus(id) {

            var cell = document.getElementById('item_' + id);
            cell.style.backgroundColor = "";
            $('#status_' + id).text('Refreshing');
            $('#planning_' + id).text('...');

            $.getJSON("/Home/GetRoomStatus",
                {
                    roomId: id
                },
                function (data) {
                    if (data.available) {

                        $('#status_' + id).text('Free');
                        if (data.freeAt != '0001-01-01T00:00:00')
                            $('#planning_' + id).text('until ' + data.freeAt.substring(11, 16));
                        else
                            $('#planning_' + id).text('rest of day');
                        var cell = document.getElementById('item_' + data.name);
                        cell.style.backgroundColor = "lightgreen";

                    }
                    else {
                        $('#status_' + id).text('Reserved');
                        if (data.freeAt != '0001-01-01T00:00:00')
                            $('#planning_' + id).text('Free at ' + data.freeAt.substring(11, 16));
                        else
                            $('#planning_' + id).text('rest of day');
                        var cell = document.getElementById('item_' + data.name);
                        cell.style.backgroundColor = "pink";
                    }

                    var label = document.getElementById('occupied_' + data.name);
                    switch (data.occupied) {
                        case 0:
                            label.className = 'label label-success';
                            label.style.visibility = "visible";
                            break;
                        case 1:
                            label.className = 'label label-warning';
                            label.style.visibility = "visible";
                            break;
                        case 2:
                            label.className = 'label label-danger';
                            label.style.visibility = "visible";
                            break;
                        default:
                            label.className = 'label label-default';
                            label.style.visibility = "hidden";
                            break;
                    }
                });

        }
        </script>
