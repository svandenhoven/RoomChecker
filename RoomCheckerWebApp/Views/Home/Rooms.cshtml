@model IEnumerable<RoomChecker.Models.Room>

@{
    ViewData["Title"] = "Rooms at " + DateTime.Now.ToShortDateString() + " on " + DateTime.Now.ToShortTimeString();
}

<link rel="stylesheet" href="~/css/roomcheckerstyle1.css" />

@if (!User.Identity.IsAuthenticated)
{
    <p>@(ViewBag.Message)</p>
    <button type="button" class="btn btn-primary" onclick="javascript:window.location='/Account/SignIn'">Sign In</button>
}
else
{
    <H1 id="timeTitle"></H1>

    <button type="button" class="btn btn-primary" onclick="javascript: SetStatus()">Check Now</button>
    <p></p>
    <input type="datetime-local" name="checkTime" id="checkTime">
    <button type="button" class="btn btn-primary" onclick="javascript: SetStatusOnDate()">Check Date</button>
    <H2>Floors:</H2>
    @foreach (var floor in Model.GroupBy(r => r.Floor))
    {
        <button type="button" onclick="javascript:toggleFloorButton(this)" class="btn btn-primary" data-toggle="collapse" data-target="#F-@floor.Key">@floor.Key</button>
    }

    <H2>Filters:</H2>
    @: Available Only:
    <label class="switch">
        <input type="checkbox" checked id="avialableOnlyCheckBox" onclick="ShowAvailableOnly()">
        <span class="slider"></span>
    </label>

}



<p></p>

@foreach (var floor in Model.GroupBy(r => r.Floor))
{
    <div id="F-@floor.Key" class="collapse in">
        @foreach (var type in Model.Where(r => r.Floor == floor.Key).GroupBy(t => t.Type))
        {
        <fieldset class="scheduler-border">
            <legend class="scheduler-border">@type.Key.First().ToString().ToUpper()@type.Key.Substring(1) Rooms on Floor @(floor.Key)</legend>
            @foreach (var item in Model.Where(r => r.Floor == floor.Key && r.Type == type.Key))
            {

                <!-- Modal -->
                <div id="ModalLoc_@(item.Id.Split('@')[0])" class="modal fade" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h3 class="modal-title">Floor @(floor.Key), Room @(item.Id.Split('@')[0])</h3>
                            </div>
                            <div class="modal-body">
                                <p>
                                    @Html.DisplayFor(modelItem => item.Capacity) Person(s) room
                                    @Html.DisplayFor(modelItem => item.AudioVideo)
                                </p>
                                <div style="position: relative; left: 0; top: 0;">
                                    <img src="~/images/floor@(floor.Key).png" width="300" height="400" />
                                    @switch (floor.Key)
                                    {
                                        case 1:
                                            <img id="@(item.Id.Split('@')[0])_dot" src="~/images/dot.png" style="position: absolute; left: @(Convert.ToInt16((60-Math.Abs(item.X))*(300/60)))px; top: @(Convert.ToInt16(item.Y*-1)*(400/75))px;" />
                                            break;
                                        case 2:
                                        case 3:
                                            <img id="@(item.Id.Split('@')[0])_dot" src="~/images/dot.png" style="position: absolute; left: @(Convert.ToInt16((45-Math.Abs(item.X))*(300/45)))px; top: @(Convert.ToInt16(item.Y*-1)*(400/75))px;" />
                                            break;
                                        case 4:
                                            <img id="@(item.Id.Split('@')[0])_dot" src="~/images/dot.png" style="position: absolute; left: @(Convert.ToInt16((45-Math.Abs(item.X))*(300/25)))px; top: @(Convert.ToInt16(item.Y*-1)*(400/45))px;" />
                                            break;
                                    };
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal Image-->
                <div id="ModalImg_@(item.Id.Split('@')[0])" class="modal fade" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h3 class="modal-title">Floor @(floor.Key), Room @(item.Id.Split('@')[0])</h3>
                            </div>
                            <div class="modal-body">
                                <p>
                                    <img width="300" src="@ViewBag.ImageContainer/@(item.Id.Split('@')[0]).png"/>
                                </p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="gallery" id="item_@(item.Id.Split('@')[0])">
                    <div id="occupied_@(item.Id.Split('@')[0])" class="label label-default" style="visibility:hidden">&nbsp;</div>
                    <div class="roomName">@(item.Name)</div>
                    <div class="capacity">@Html.DisplayFor(modelItem => item.Capacity)p @Html.DisplayFor(modelItem => item.AudioVideo)</div>
                    <div class="desc">
                        <div class="status" id="status_@(item.Id.Split('@')[0])">Checking...</div>
                        <div class="planning" id="planning_@(item.Id.Split('@')[0])">&nbsp;</div>
                    </div>
                    <div id="scheduleLine">
                        <table border="1" align="center">
                            <tr>
                                @for (int i = 8; i < 19; i++)
                                {
                                    <td class="unknown" title="@i - @i+1" id="@(item.Id.Split('@')[0])-h-@i">
                                        &nbsp;
                                    </td>
                                }

                            </tr>
                            <tr>
                                @for (int i = 8; i < 19; i++)
                                {
                                    <td style="font-size:6px; text-align:center">
                                        @i
                                    </td>
                                }
                            </tr>
                        </table>
                    </div>
                    <hr />
                    <div style="align-content:center">
                        <button type="button" class="btn btn-primary" onclick="javascript:$('#ModalLoc_@(item.Id.Split('@')[0])').modal('show');">?</button>
                        <button type="button" class="btn btn-primary" onclick="javascript:$('#ModalImg_@(item.Id.Split('@')[0])').modal('show');">View</button>
                    </div>
                    <!--
            <div style="align-content:center">
                <button id="lightOn_@(item.Id.Split('@')[0])" type="button" onclick="" class="btn btn-default">On</button>
                <button id="lightOff_@(item.Id.Split('@')[0])" type="button" onclick="" class="btn btn-default">Off</button>
            </div>
            -->

                    <span id="label_@(item.Id.Split('@')[0])" class="label label-default">@(item.Type) </span>
                </div>
            }
        </fieldset>

        }
    </div>
}

<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
<script>
    var rooms = [];
    var domain = '@@' + '@Model.First().Id.Split('@')[1]';
    @foreach (var d in Model)
    {
        @: rooms.push("@d.Id.Split('@')[0]");
    }
    var roomType = 'meet';
    var _tenantId = '@ViewBag.Tenant';
</script>

<script src="~/js/RoomChecker.js">
</script>
